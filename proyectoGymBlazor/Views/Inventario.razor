@page "/inventarios"
@using proyectoGymBlazor.Model
@using proyectoGymBlazor.Services
@inject InventarioService InventarioService
@inject NavigationManager NavigationManager

<h3>Gestión de Inventario</h3>

<!-- Tabla para listar los elementos del inventario -->
<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Fecha de Adquisición</th>
            <th>Vida Útil (meses)</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var equipo in listaInventario)
        {
            <tr>
                <td>@equipo.Nombre</td>
                <td>@equipo.FechaAdquisicion.ToString("dd/MM/yyyy")</td>
                <td>@equipo.VidaUtilMeses</td>
                <td>@equipo.Estado</td>
                <td>
                    <button class="btn btn-primary btn-sm" @onclick="() => EditarEquipo(equipo)">Editar</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => EliminarEquipo(equipo.EquipoID)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-success" @onclick="NuevoEquipo">Nuevo Equipo</button>

@if (mostrarFormulario)
{
    <div class="mt-3">
        <h4>@(equipoSeleccionado.EquipoID == 0 ? "Nuevo Equipo" : "Editar Equipo")</h4>
        <EditForm Model="@equipoSeleccionado" OnValidSubmit="GuardarEquipo">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Nombre</label>
                <InputText class="form-control" @bind-Value="equipoSeleccionado.Nombre" />
            </div>
            <div class="form-group">
                <label>Fecha de Adquisición</label>
                <InputDate class="form-control" @bind-Value="equipoSeleccionado.FechaAdquisicion" />
            </div>
            <div class="form-group">
                <label>Vida Útil (meses)</label>
                <InputNumber class="form-control" @bind-Value="equipoSeleccionado.VidaUtilMeses" />
            </div>
            <div class="form-group">
                <label>Estado</label>
                <select class="form-control" @bind-Value="equipoSeleccionado.Estado">
                    <option>Disponible</option>
                    <option>En uso</option>
                    <option>En mantenimiento</option>
                </select>
            </div>
            <button class="btn btn-primary" type="submit">Guardar</button>
            <button class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
        </EditForm>
    </div>
}

@code {
    private List<Inventario> listaInventario = new();
    private Inventario equipoSeleccionado = new();
    private bool mostrarFormulario = false;

    protected override async Task OnInitializedAsync()
    {
        listaInventario = await InventarioService.GetInventarioAsync();
    }

    private void NuevoEquipo()
    {
        equipoSeleccionado = new Inventario();
        mostrarFormulario = true;
    }

    private void EditarEquipo(Inventario equipo)
    {
        equipoSeleccionado = equipo;
        mostrarFormulario = true;
    }

    private async Task GuardarEquipo()
    {
        if (equipoSeleccionado.EquipoID == 0)
        {
            await InventarioService.AddInventarioAsync(equipoSeleccionado);
        }
        else
        {
            await InventarioService.UpdateInventarioAsync(equipoSeleccionado);
        }

        listaInventario = await InventarioService.GetInventarioAsync();
        mostrarFormulario = false;
    }

    private async Task EliminarEquipo(int equipoId)
    {
        await InventarioService.DeleteInventarioAsync(equipoId);
        listaInventario = await InventarioService.GetInventarioAsync();
    }

    private void Cancelar()
    {
        mostrarFormulario = false;
    }
}

