@using proyectoGymBlazor.Model
@using proyectoGymBlazor.Services
@inject ProgresoUsuarioService ProgresoUsuarioService

<h3>Gestión de Progreso de Usuarios</h3>

<!-- Tabla para listar los registros -->
<table class="table">
    <thead>
        <tr>
            <th>Progreso ID</th>
            <th>Usuario ID</th>
            <th>Fecha</th>
            <th>Métrica</th>
            <th>Valor</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var progreso in listaProgresos)
        {
            <tr>
                <td>@progreso.ProgresoId</td>
                <td>@progreso.UsuarioId</td>
                <td>@progreso.Fecha.ToString("dd/MM/yyyy")</td>
                <td>@progreso.Metrica</td>
                <td>@progreso.Valor</td>
                <td>
                    <button class="btn btn-primary btn-sm" @onclick="() => EditarProgreso(progreso)">Editar</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => EliminarProgreso(progreso.ProgresoId)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Formulario para agregar/editar -->
<h4>@(editando ? "Editar Progreso" : "Agregar Progreso")</h4>
<EditForm Model="@progresoActual" OnValidSubmit="GuardarProgreso">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="UsuarioId">Usuario ID</label>
        <InputNumber id="UsuarioId" class="form-control" @bind-Value="progresoActual.UsuarioId" />
    </div>
    <div class="form-group">
        <label for="Fecha">Fecha</label>
        <InputDate id="Fecha" class="form-control" @bind-Value="progresoActual.Fecha" />
    </div>
    <div class="form-group">
        <label for="Metrica">Métrica</label>
        <InputText id="Metrica" class="form-control" @bind-Value="progresoActual.Metrica" />
    </div>
    <div class="form-group">
        <label for="Valor">Valor</label>
        <InputNumber id="Valor" class="form-control" @bind-Value="progresoActual.Valor" />
    </div>
    <button type="submit" class="btn btn-success">@((editando) ? "Actualizar" : "Agregar")</button>
</EditForm>

@code {
    private List<ProgresoUsuario> listaProgresos = new();
    private ProgresoUsuario progresoActual = new ProgresoUsuario();
    private bool editando = false;

    protected override async Task OnInitializedAsync()
    {
        listaProgresos = await ProgresoUsuarioService.GetProgresosAsync();
    }

    private async Task GuardarProgreso()
    {
        if (editando)
        {
            await ProgresoUsuarioService.UpdateProgresoAsync(progresoActual);
        }
        else
        {
            await ProgresoUsuarioService.AddProgresoAsync(progresoActual);
        }
        progresoActual = new ProgresoUsuario();
        editando = false;
        listaProgresos = await ProgresoUsuarioService.GetProgresosAsync();
    }

    private void EditarProgreso(ProgresoUsuario progreso)
    {
        progresoActual = progreso;
        editando = true;
    }

    private async Task EliminarProgreso(int progresoId)
    {
        await ProgresoUsuarioService.DeleteProgresoAsync(progresoId);
        listaProgresos = await ProgresoUsuarioService.GetProgresosAsync();
    }
}
