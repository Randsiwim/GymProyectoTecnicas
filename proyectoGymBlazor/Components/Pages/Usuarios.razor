@page "/usuarios"
@using proyectoGymBlazor.Data
@inject GimnasioDbContext DbContext
@inject NavigationManager NavigationManager

<h3>Gestión de Usuarios</h3>

<table class="table">
    <thead>
        <tr>
            <th>#</th>
            <th>Nombre</th>
            <th>Email</th>
            <th>Rol</th>
            <th>Puntos Fuertes</th>
            <th>Horario</th>
            <th>Fecha Registro</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var usuario in listaUsuarios)
        {
            <tr>
                <td>@usuario.UsuarioID</td>
                <td>@usuario.Nombre</td>
                <td>@usuario.Email</td>
                <td>@usuario.Rol</td>
                <td>@usuario.PuntosFuertes</td>
                <td>@usuario.Horario</td>
                <td>@usuario.FechaRegistro.ToString("dd/MM/yyyy")</td>
                <td>
                    <button class="btn btn-secondary btn-sm" @onclick="() => EditarUsuario(usuario.UsuarioID)">Editar</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => EliminarUsuario(usuario.UsuarioID)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="NuevoUsuario">Agregar Usuario</button>

@code {
    private List<UsuarioID> listaUsuarios = new();

    protected override async Task OnInitializedAsync()
    {
        await CargarUsuariosDesdeDB();
    }

    private async Task CargarUsuariosDesdeDB()
    {
        listaUsuarios = await DbContext.Usuarios.ToListAsync();
    }

    private void EditarUsuario(int usuarioID)
    {
        // Navegar a la página de edición
        NavigationManager.NavigateTo($"/usuarios/editar/{usuarioID}");
    }

    private async Task EliminarUsuario(int usuarioID)
    {
        var usuario = listaUsuarios.FirstOrDefault(u => u.UsuarioID == usuarioID);
        if (usuario != null)
        {
            listaUsuarios.Remove(usuario);
            DbContext.Usuarios.Remove(usuario);
            await DbContext.SaveChangesAsync();
            Console.WriteLine($"Usuario con ID {usuarioID} eliminado.");
        }
    }

    private void NuevoUsuario()
    {
        // Navegar a la página para agregar un nuevo usuario
        NavigationManager.NavigateTo("/usuarios/nuevo");
    }
}
